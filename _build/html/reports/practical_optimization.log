Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import mosek

# Create a new optimization task
with mosek.Env() as env:
    with env.Task() as task:
        # Set the optimization sense to maximize
        task.putobjsense(mosek.objsense.maximize)

        # Define the variables
        x_idx = task.appndvars(1)
        y_idx = task.appndvars(1)

        # Define the objective function
        task.putcj(x_idx, 2)
        task.putcj(y_idx, 3)

        # Add the constraints
        task.putconbound(0, mosek.boundkey.up, 4)
        task.putaij(0, x_idx, 1)
        task.putaij(0, y_idx, 1)

        # Optimize the task
        task.optimize()

        # Print the optimal values of x and y
        print("Optimal value of x:", task.getxx(x_idx)[0])
        print("Optimal value of y:", task.getxx(y_idx)[0])
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[3], line 10[0m
[1;32m      7[0m task[38;5;241m.[39mputobjsense(mosek[38;5;241m.[39mobjsense[38;5;241m.[39mmaximize)
[1;32m      9[0m [38;5;66;03m# Define the variables[39;00m
[0;32m---> 10[0m x_idx [38;5;241m=[39m [43mtask[49m[38;5;241;43m.[39;49m[43mappndvars[49m([38;5;241m1[39m)
[1;32m     11[0m y_idx [38;5;241m=[39m task[38;5;241m.[39mappndvars([38;5;241m1[39m)
[1;32m     13[0m [38;5;66;03m# Define the objective function[39;00m

[0;31mAttributeError[0m: 'Task' object has no attribute 'appndvars'
AttributeError: 'Task' object has no attribute 'appndvars'

