Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import cvxpy as cp

# Define problem data
A = [[1, 1, 0], [0, 1, 1]]
b = [1, 1]

# Define binary decision variables
x = cp.Variable(3, boolean=True)

# Define objective function
obj = cp.sum(x)

# Define constraints
constraints = [A[i] @ x > b[i] for i in range(len(b))]
constraints.append(x[0] >= 0) # x1 is binary
constraints.append(x[1] >= 0) # x2 is binary
constraints.append(x[2] >= 0) # x3 is binary

# Define problem instance and solve it
prob = cp.Problem(cp.Minimize(obj), constraints)
prob.solve(solver=cp.MOSEK)

# Print results
print("CVXPY Solution:")
print("status:", prob.status)
print("optimal value:", prob.value)
print("optimal x:", x.value)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNotImplementedError[0m                       Traceback (most recent call last)
Cell [0;32mIn[4], line 14[0m
[1;32m     11[0m obj [38;5;241m=[39m cp[38;5;241m.[39msum(x)
[1;32m     13[0m [38;5;66;03m# Define constraints[39;00m
[0;32m---> 14[0m constraints [38;5;241m=[39m [A[i] [38;5;241m@[39m x [38;5;241m>[39m b[i] [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m(b))]
[1;32m     15[0m constraints[38;5;241m.[39mappend(x[[38;5;241m0[39m] [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m) [38;5;66;03m# x1 is binary[39;00m
[1;32m     16[0m constraints[38;5;241m.[39mappend(x[[38;5;241m1[39m] [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m) [38;5;66;03m# x2 is binary[39;00m

Cell [0;32mIn[4], line 14[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m     11[0m obj [38;5;241m=[39m cp[38;5;241m.[39msum(x)
[1;32m     13[0m [38;5;66;03m# Define constraints[39;00m
[0;32m---> 14[0m constraints [38;5;241m=[39m [[43mA[49m[43m[[49m[43mi[49m[43m][49m[43m [49m[38;5;241;43m@[39;49m[43m [49m[43mx[49m[43m [49m[38;5;241;43m>[39;49m[43m [49m[43mb[49m[43m[[49m[43mi[49m[43m][49m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m(b))]
[1;32m     15[0m constraints[38;5;241m.[39mappend(x[[38;5;241m0[39m] [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m) [38;5;66;03m# x1 is binary[39;00m
[1;32m     16[0m constraints[38;5;241m.[39mappend(x[[38;5;241m1[39m] [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m) [38;5;66;03m# x2 is binary[39;00m

File [0;32m/opt/homebrew/Caskroom/miniconda/base/envs/cvxpy_env/lib/python3.10/site-packages/cvxpy/expressions/expression.py:737[0m, in [0;36mExpression.__gt__[0;34m(self, other)[0m
[1;32m    734[0m [38;5;28;01mdef[39;00m [38;5;21m__gt__[39m([38;5;28mself[39m, other: [38;5;124m"[39m[38;5;124mExpression[39m[38;5;124m"[39m):
[1;32m    735[0m [38;5;250m    [39m[38;5;124;03m"""Unsupported.[39;00m
[1;32m    736[0m [38;5;124;03m    """[39;00m
[0;32m--> 737[0m     [38;5;28;01mraise[39;00m [38;5;167;01mNotImplementedError[39;00m([38;5;124m"[39m[38;5;124mStrict inequalities are not allowed.[39m[38;5;124m"[39m)

[0;31mNotImplementedError[0m: Strict inequalities are not allowed.
NotImplementedError: Strict inequalities are not allowed.

